<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AspCore on Cezary Piątek Blog</title>
    <link>https://cezarypiatek.github.io/tags/aspcore/</link>
    <description>Recent content in AspCore on Cezary Piątek Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Aug 2021 00:21:45 +0200</lastBuildDate><atom:link href="https://cezarypiatek.github.io/tags/aspcore/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Readable and clear tests for ASP.NET Core services</title>
      <link>https://cezarypiatek.github.io/post/component-tests-scenarios/</link>
      <pubDate>Mon, 09 Aug 2021 00:21:45 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/component-tests-scenarios/</guid>
      <description>For the last year, I&amp;rsquo;ve had an opportunity to work quite a lot with Component Tests for microservices built with ASP.NET Core. The vocabulary related to testing is very vague and terms like Unit, Component, and Integration tests can be interpreted differently based on the context, so let me explain first what I mean by Component Tests. It&amp;rsquo;s a kind of test that treats your whole service as a black box.</description>
    </item>
    
    <item>
      <title>Auto generated WebAPI client library with NSwag</title>
      <link>https://cezarypiatek.github.io/post/auto-generated-web-api-client/</link>
      <pubDate>Sun, 06 Sep 2020 00:11:45 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/auto-generated-web-api-client/</guid>
      <description>In the era of microservices and distributed systems, web browser applications written in JavaScript are not the only consumers of the REST API. Today, more and more often this type of communication is used to connect backend services, too. Integrating two services using REST protocol doesn&amp;rsquo;t require any form of shared contract which makes the process extremely easy when both sides are developed in different technologies but it comes at a price.</description>
    </item>
    
  </channel>
</rss>
