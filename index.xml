<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CEZARY PIĄTEK</title>
    <link>https://cezarypiatek.github.io/</link>
    <description>Recent content on CEZARY PIĄTEK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Oct 2017 17:38:18 +0200</lastBuildDate>
    
	<atom:link href="https://cezarypiatek.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why clicking with Selenium is so hard.</title>
      <link>https://cezarypiatek.github.io/post/why-click-with-selenium-so-hard/</link>
      <pubDate>Thu, 05 Oct 2017 17:38:18 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/why-click-with-selenium-so-hard/</guid>
      <description>When I browse StackOverflow questions tagged with selenium label, a lot of them are related to the problem of clicking on page elements. It seems to be one of the most trivial tasks, but can cause a lot of problems. Very often invoking Click() action on webelement ends with exceptions (there is a wide range of them). The main reason is that element on which we try to click is not in &amp;ldquo;Interactable&amp;rdquo; state.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://cezarypiatek.github.io/projects/</link>
      <pubDate>Tue, 03 Oct 2017 20:17:23 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/projects/</guid>
      <description>DependencyGraph
A small F# application to visualize .net assembly dependencies.
 VanillaTransformer
VanillaTransformer is a simple generic text file transformer. It was designed for configuration transforming as an alternative for XML-Document-Transform tool. Unlike XML-DT, it works with any kind of text file (not only XML) and is much simpler to use.
 Tellurium
A utility pack to create maintainanble UI tests for ASP.NET MVC projects using Selenium
 Code Topology</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://cezarypiatek.github.io/about/</link>
      <pubDate>Tue, 03 Oct 2017 19:59:11 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/about/</guid>
      <description>I started programming at 10 years old trying to retype some simple Basic programs from an old user guide to my C-64. It was just a temporary hobby but a few years later I bought a programmer magazine with C++ Builder on CD and started to write my first real programs. In high school I got interested in web development using Html, JavaScript and PHP. I graduated from the University of Science and Technology AGH (Kraków, Poland).</description>
    </item>
    
    <item>
      <title>Hunt your bugs in design time</title>
      <link>https://cezarypiatek.github.io/post/hunt-your-bugs-design-time/</link>
      <pubDate>Wed, 27 Apr 2016 21:27:16 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/hunt-your-bugs-design-time/</guid>
      <description>Static analysis is a powerful feature of Visual Studio that helps us to spot syntax and semantic errors in our code. It works very well on currently edited file and runs on the whole solution as one of the compilation stages. But it would be a waste of time to run compilation every time you make changes that affect code outside currently edited file, only to check that you didn&amp;rsquo;t cause any compilation errors.</description>
    </item>
    
    <item>
      <title>Save your history - TortoiseSVN and &#34;Repair move&#34; option.</title>
      <link>https://cezarypiatek.github.io/post/my-first-post/</link>
      <pubDate>Sun, 21 Sep 2014 17:38:18 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/my-first-post/</guid>
      <description>&lt;p&gt;TortoiseSVN has a function named simply “rename” which allows you to change the file name and keep the file history as well. But what if we change the file name for example during refactoring using Visual Studio? Are we fated to lose file history? Fortunately TortoiseSVN has an interesting option called “repair move”.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Don&#39;t write dull code - Resharper Live Templates</title>
      <link>https://cezarypiatek.github.io/post/livetemplates/</link>
      <pubDate>Sun, 13 Apr 2014 17:38:18 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/livetemplates/</guid>
      <description>One of the greatest features of Resharper are Live Templates. They can speed up your code typing and help you focus only on what is most important (you don’t need to remember and retype anymore long ‘dull’ code constructions). Live Templates are similar to Visual Studio code snippets but are easier to define and introduce smart parameters that help you in faster code completion.
Template Explorer You can manage Live Templates in Templates Explorer from RESHARPER menu (RESHARPER -&amp;gt; Template Explorer&amp;hellip;).</description>
    </item>
    
  </channel>
</rss>