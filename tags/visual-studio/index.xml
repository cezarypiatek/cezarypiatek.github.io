<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visual studio on Cezary Piątek Blog</title>
    <link>https://cezarypiatek.github.io/tags/visual-studio/</link>
    <description>Recent content in visual studio on Cezary Piątek Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Oct 2019 00:20:45 +0200</lastBuildDate>
    
	<atom:link href="https://cezarypiatek.github.io/tags/visual-studio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Non-nullable references with C# 8 and DotnetCore 3.0</title>
      <link>https://cezarypiatek.github.io/post/non-nullable-references-in-dotnet-core/</link>
      <pubDate>Thu, 03 Oct 2019 00:20:45 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/non-nullable-references-in-dotnet-core/</guid>
      <description>How to use Non-nullable references The era before C# 8    Code Title     CS0458 The result of the expression is always &amp;lsquo;null&amp;rsquo;   CS0464 Comparing with null of struct type always produces &amp;lsquo;false&amp;rsquo;   CS0472 The result of the expression is always the same since a value of this type is never equal to &amp;lsquo;null&amp;rsquo;   CS1720 Expression will always cause a System.</description>
    </item>
    
    <item>
      <title>Renovate your .NET solution</title>
      <link>https://cezarypiatek.github.io/post/renovate-your-dot-net-solution/</link>
      <pubDate>Mon, 11 Feb 2019 00:20:45 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/renovate-your-dot-net-solution/</guid>
      <description>In the early days of dotnet core, there was an attempt of changing the C# project file format. The old &amp;ldquo;csproj&amp;rdquo; based on XML format was replaced with .xproj/project.json. However, after releasing dotnet core 1.0 the authors decided to get back to XML file. The format stayed the same but the specification went through a major change. With the new schema, a lot of improvements come into .net development and they are not restricted only to dotnet core projects.</description>
    </item>
    
  </channel>
</rss>