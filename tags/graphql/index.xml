<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GraphQL on Cezary Piątek Blog</title>
    <link>https://cezarypiatek.github.io/tags/graphql/</link>
    <description>Recent content in GraphQL on Cezary Piątek Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jan 2024 00:10:45 +0200</lastBuildDate>
    <atom:link href="https://cezarypiatek.github.io/tags/graphql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mocking GraphQL queries with WireMock.NET</title>
      <link>https://cezarypiatek.github.io/post/mocking-graphql-with-wiremock/</link>
      <pubDate>Wed, 17 Jan 2024 00:10:45 +0200</pubDate>
      <guid>https://cezarypiatek.github.io/post/mocking-graphql-with-wiremock/</guid>
      <description>&lt;p&gt;GraphQL is a query language for APIs that allows clients to request exactly what they need, making data retrieval more efficient than traditional REST APIs. It supports three different types of client-server interaction: queries, mutations and subscriptions. When you start integrating a GraphQL API as a consumer in your application, it&amp;rsquo;s likely that you&amp;rsquo;ll need to write automated tests to ensure that the integration works correctly. In this blog post, I will show you how to mock GraphQL queries using WireMock.NET.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
