<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code generation on Cezary Piątek Blog</title>
    <link>https://cezarypiatek.github.io/tags/code-generation/</link>
    <description>Recent content in code generation on Cezary Piątek Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jun 2020 00:11:45 +0200</lastBuildDate>
    
	<atom:link href="https://cezarypiatek.github.io/tags/code-generation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Twin types - properties synchronization without inheritance</title>
      <link>https://cezarypiatek.github.io/post/csharp-twin-types/</link>
      <pubDate>Sun, 14 Jun 2020 00:11:45 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/csharp-twin-types/</guid>
      <description>A couple of months ago I&amp;rsquo;ve started working on a simple CRUD service. A mix of ASP Core for REST API with Dapper for Database access - probably one of the most popular stacks for this kind of application. Very quickly it turned out that it&amp;rsquo;s more complex than I expected and this &amp;ldquo;simple-boring&amp;rdquo; CRUD became more interesting and challenging.
The Problem One of the first problems that I came across was that I had a lot of types that looked very similar but had some differences and served different purposes, like:</description>
    </item>
    
    <item>
      <title>How to simulate AutoMapper that works during the build time</title>
      <link>https://cezarypiatek.github.io/post/generate-mappings-on-build/</link>
      <pubDate>Sun, 01 Dec 2019 00:09:00 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/generate-mappings-on-build/</guid>
      <description>Almost two years ago I created the very first version of MappingGenerator. Since then, I&amp;rsquo;ve put a lot of work in this project, adding new functions and improving the mapping generation algorithm with 14 releases (43 issues/feature requests closed) in the meantime. With over 5.5k downloads from the marketplace and 380 stars on Github, it looks like there is quite a market demand for this kind of tool (even though my coffee button statistics indicate something different).</description>
    </item>
    
    <item>
      <title>CSharp Macros - let the Roslyn type for you</title>
      <link>https://cezarypiatek.github.io/post/csharp-macros/</link>
      <pubDate>Sun, 01 Sep 2019 00:11:45 +0200</pubDate>
      
      <guid>https://cezarypiatek.github.io/post/csharp-macros/</guid>
      <description>I&amp;rsquo;m a programmer but I don&amp;rsquo;t like to write code. OK, it&amp;rsquo;s not the whole truth. I don&amp;rsquo;t like to write the code that is repeatable. Whenever I need to do something more than twice, I start thinking about automation. Hopefully, this problem can be addressed with code snippets. Visual Studio provides a predefined set of snippets that can be extended, but if you are a Resharper user you should definitely get to know LiveTemplates because it&amp;rsquo;s more powerful and easier to configure.</description>
    </item>
    
  </channel>
</rss>